name: CICD for Java Maven Project

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build with Maven
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: boardgame-jar
          path: target/*.jar

  scan:
    name: Filesystem Scan with Trivy
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Trivy FS scan
        run: |
          trivy fs --format table -o fs.html .

  sonar:
    name: SonarQube Analysis
    runs-on: self-hosted
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.projectKey=Boardgame
            -Dsonar.projectName=Boardgame
            -Dsonar.host.url=http://34.58.45.101:9000
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  docker:
    name: Docker Build and Push
    runs-on: self-hosted
    needs: [build, scan, sonar]
    steps:

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download JAR Artifact
        uses: actions/download-artifact@v4
        with:
          name: boardgame-jar
          path: target

      - name: Build Docker Image
        run: |
          docker build -t mydeendevops369/boardgame:latest .

      - name: Trivy Image Scan
        run: |
          trivy image --format table -o trivy-image-report.html mydeendevops369/boardgame:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Image
        run: |
          docker push mydeendevops369/boardgame:latest

  deploy:
    name: Deploy to GCP VM
    runs-on: self-hosted
    needs: docker
    steps:
      - name: Deploy to GCP VM via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_VM_SSH_KEY }}
          port: 22
          script: |
            docker pull mydeendevops369/boardgame:latest
            docker stop boardgame || true
            docker rm boardgame || true
            docker run -d --name boardgame -p 8081:8080 mydeendevops369/boardgame:latest
